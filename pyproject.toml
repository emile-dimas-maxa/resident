[tool.poetry]
name = "resident"
version = "0.1.0"
description = ""
authors = ["Emile Dimas <emile.dimas@maxa.ai>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
alembic = "^1.13.1"
numpy = "^1.26.4"
pandas = "^2.2.2"
pydantic = "^2.7.1"
selenium = "^4.21.0"
SQLAlchemy = "^2.0.30"
streamlit = "^1.35.0"
loguru = "^0.7.2"

[tool.poetry.dev-dependencies]
ruff = "^0.4.5"
jupyterlab = "^4.2.1"
pytest = "8.2.1"


[tool.ruff]
# Same as Black.
line-length = 120

# Assume Python 3.8
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "tab"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
